/**
 * @file src/config/env.ts
 * @version 0
 * @description –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * @changelog
 *   0 - –ü–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è (2025-01-22)
 */

import * as dotenv from "dotenv";
import * as path from "path";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
// –ü—ã—Ç–∞–µ–º—Å—è –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø—É—Ç–µ–π, —á—Ç–æ–±—ã –ø–æ–∫—Ä—ã—Ç—å ts-node –∏ compiled dist
dotenv.config();
dotenv.config({ path: path.resolve(process.cwd(), ".env") });
dotenv.config({ path: path.resolve(__dirname, "../../.env") });

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
interface AppConfig {
  // Gate.io API
  gateio: {
    apiKey: string;
    apiSecret: string;
    apiUrl: string;
    wsUrl: string;
  };

  // –¢–æ—Ä–≥–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  trading: {
    symbol: string;
    orderBookDepth: number;
  };

  // WebSocket Server
  server: {
    wsPort: number;
  };

  // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  database: {
    path: string;
    orderBookPressureInterval: number;
    retentionDays: number;
  };

  // –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
  mode: "production" | "development" | "testnet";

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  logging: {
    level: "debug" | "info" | "warn" | "error";
    toFile: boolean;
    dir: string;
  };

  // Event Bus
  eventBus: {
    maxListeners: number;
  };

  // Timeframes (–¥–ª—è TVP Strategy)
  timeframes: {
    htf: number; // –í—ã—Å—à–∏–π —Ç–∞–π–º—Ñ—Ä–µ–π–º (–º–∏–Ω—É—Ç—ã)
    mtf: number; // –°—Ä–µ–¥–Ω–∏–π —Ç–∞–π–º—Ñ—Ä–µ–π–º (–º–∏–Ω—É—Ç—ã)
    ltf: string; // –ú–ª–∞–¥—à–∏–π —Ç–∞–π–º—Ñ—Ä–µ–π–º (ticks)
  };
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –≤—ã–±—Ä–æ—Å–∏—Ç—å –æ—à–∏–±–∫—É
 *
 * @param key - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
 * @param defaultValue - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @returns –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
 * @throws {Error} –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏ –Ω–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
function getEnvVar(key: string, defaultValue?: string): string {
  const value = process.env[key] || defaultValue;

  if (value === undefined) {
    throw new Error(
      `‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ${key} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª.`
    );
  }

  return value;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
 *
 * @param key - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
 * @param defaultValue - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 * @returns —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
 */
function getEnvNumber(key: string, defaultValue: number): number {
  const value = process.env[key];

  if (value === undefined) {
    return defaultValue;
  }

  const parsed = parseInt(value, 10);

  if (isNaN(parsed)) {
    throw new Error(
      `‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ${key} –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º! –ü–æ–ª—É—á–µ–Ω–æ: ${value}`
    );
  }

  return parsed;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
 *
 * @param key - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
 * @param defaultValue - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 * @returns –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ
 */
function getEnvBoolean(key: string, defaultValue: boolean): boolean {
  const value = process.env[key];

  if (value === undefined) {
    return defaultValue;
  }

  return value.toLowerCase() === "true";
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 *
 * @param config - –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 * @throws {Error} –µ—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞
 */
function validateConfig(config: AppConfig): void {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á–∏
  if (config.gateio.apiKey === "your_api_key_here") {
    throw new Error(
      "‚ùå GATE_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á–∏ –Ω–∞ https://www.gate.io/myaccount/apiv4keys"
    );
  }

  if (config.gateio.apiSecret === "your_api_secret_here") {
    throw new Error(
      "‚ùå GATE_API_SECRET –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á–∏ –Ω–∞ https://www.gate.io/myaccount/apiv4keys"
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—Ä–≥–æ–≤—É—é –ø–∞—Ä—É
  if (!config.trading.symbol || config.trading.symbol.length < 3) {
    throw new Error("‚ùå SYMBOL –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω! –ü—Ä–∏–º–µ—Ä: ETH_USDT");
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
  const validModes = ["production", "development", "testnet"];
  if (!validModes.includes(config.mode)) {
    throw new Error(`‚ùå MODE –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: ${validModes.join(", ")}`);
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  const validLogLevels = ["debug", "info", "warn", "error"];
  if (!validLogLevels.includes(config.logging.level)) {
    throw new Error(
      `‚ùå LOG_LEVEL –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑: ${validLogLevels.join(", ")}`
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã
  if (config.timeframes.htf <= config.timeframes.mtf) {
    throw new Error("‚ùå HTF_TIMEFRAME –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ MTF_TIMEFRAME!");
  }

  console.log("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞!");
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 *
 * @returns –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
export function loadConfig(): AppConfig {
  console.log("üìã –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...");

  const config: AppConfig = {
    // Gate.io API
    gateio: {
      apiKey: getEnvVar("GATE_API_KEY"),
      apiSecret: getEnvVar("GATE_API_SECRET"),
      apiUrl: getEnvVar("GATE_API_URL", "https://api.gateio.ws"),
      wsUrl: getEnvVar("GATE_WS_URL", "wss://api.gateio.ws/ws/v4/"),
    },

    // –¢–æ—Ä–≥–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    trading: {
      symbol: getEnvVar("SYMBOL", "ETH_USDT"),
      orderBookDepth: getEnvNumber("ORDERBOOK_DEPTH", 20),
    },

    // WebSocket Server
    server: {
      wsPort: getEnvNumber("WS_SERVER_PORT", 8080),
    },

    // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    database: {
      path: getEnvVar("DB_PATH", "./dtrader.db"),
      orderBookPressureInterval: getEnvNumber(
        "DB_ORDERBOOK_PRESSURE_INTERVAL",
        10
      ),
      retentionDays: getEnvNumber("DB_RETENTION_DAYS", 90),
    },

    // –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
    mode: getEnvVar("MODE", "development") as
      | "production"
      | "development"
      | "testnet",

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logging: {
      level: getEnvVar("LOG_LEVEL", "info") as
        | "debug"
        | "info"
        | "warn"
        | "error",
      toFile: getEnvBoolean("LOG_TO_FILE", false),
      dir: getEnvVar("LOG_DIR", "./logs"),
    },

    // Event Bus
    eventBus: {
      maxListeners: getEnvNumber("EVENT_BUS_MAX_LISTENERS", 100),
    },

    // Timeframes
    timeframes: {
      htf: getEnvNumber("HTF_TIMEFRAME", 24),
      mtf: getEnvNumber("MTF_TIMEFRAME", 6),
      ltf: getEnvVar("LTF_TIMEFRAME", "ticks"),
    },
  };

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  validateConfig(config);

  // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  console.log(`üìä –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: ${config.mode.toUpperCase()}`);
  console.log(`üí± –¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞: ${config.trading.symbol}`);
  console.log(`üîß WebSocket Server: –ø–æ—Ä—Ç ${config.server.wsPort}`);
  console.log(
    `üìà –¢–∞–π–º—Ñ—Ä–µ–π–º—ã: HTF ${config.timeframes.htf}m | MTF ${config.timeframes.mtf}m | LTF ${config.timeframes.ltf}`
  );
  console.log(`üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${config.database.path}`);
  console.log(`üìù –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: ${config.logging.level.toUpperCase()}`);
  console.log("");

  return config;
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
 */
export const config = loadConfig();